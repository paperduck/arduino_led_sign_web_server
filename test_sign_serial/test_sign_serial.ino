/*

RS232 shield test program
Created: 2014-12-05
 
*/

#include <SoftwareSerial.h>

//    byte            sign_packet_whole[] = {
//    0x00, 0xFF, 0xFF, 0x00, 0x0B, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 
//    0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 
//    0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 
//    0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 
//    0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 
//    0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 
//    0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 
//    0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 
//    0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 0xFF, 0x01, 0x30, 0x31, 0x13, 0xEF, 0xB0, 0xEF, 0xA2, 0x66, 0x75, 
//    0x63, 0x6B, 0xEF, 0xB1, 0xEF, 0xA0, 0xFF, 0x18, 0xEF, 0xB2, 0xEF, 0xA2, 0x73, 0x68, 0x69, 0x74, 
//    0xEF, 0xB1, 0xEF, 0xA0, 0xFF, 0xFF, 0x00
//    };

// ssss
byte            sign_packet_whole_2[148] = {
      0x00 , 0xFF , 0xFF , 0x00 , 0x0B , 0x00 , 0x01 , 0x02 , 0x03 , 0x04 , 0x05 , 0x06 , 0x07 , 0x08 , 0x09 , 0x0A 
    , 0x0B , 0x0C , 0x0D , 0x0E , 0x0F , 0x10 , 0x11 , 0x12 , 0x13 , 0x14 , 0x15 , 0x16 , 0x17 , 0x18 , 0x19 , 0x1A 
    , 0x1B , 0x1C , 0x1D , 0x1E , 0x1F , 0x20 , 0x21 , 0x22 , 0x23 , 0x24 , 0x25 , 0x26 , 0x27 , 0x28 , 0x29 , 0x2A  
    , 0x2B , 0x2C , 0x2D , 0x2E , 0x2F , 0x30 , 0x31 , 0x32 , 0x33 , 0x34 , 0x35 , 0x36 , 0x37 , 0x38 , 0x39 , 0x3A 
    , 0x3B , 0x3C , 0x3D , 0x3E , 0x3F , 0x40 , 0x41 , 0x42 , 0x43 , 0x44 , 0x45 , 0x46 , 0x47 , 0x48 , 0x49 , 0x4A  
    , 0x4B , 0x4C , 0x4D , 0x4E , 0x4F , 0x50 , 0x51 , 0x52 , 0x53 , 0x54 , 0x55 , 0x56 , 0x57 , 0x58 , 0x59 , 0x5A
    , 0x5B , 0x5C , 0x5D , 0x5E , 0x5F , 0x60 , 0x61 , 0x62 , 0x63 , 0x64 , 0x65 , 0x66 , 0x67 , 0x68 , 0x69 , 0x6A 
    , 0x6B , 0x6C , 0x6D , 0x6E , 0x6F , 0x70 , 0x71 , 0x72 , 0x73 , 0x74 , 0x75 , 0x76 , 0x77 , 0x78 , 0x79 , 0x7A
    , 0x7B , 0x7C , 0x7D , 0x7E , 0x7F , 0xFF , 0x01 , 0x30 , 0x31 , 0xEF , 0xB0 , 0xEF , 0xA2 , 0x73 , 0x73 , 0x73
    , 0x73 , 0xFF , 0xFF , 0x00
};

byte            sign_packet_whole_3 [34] = {
 0xFF, 0x01, 0x30, 0x31, 0x13, 0xEF, 0xB0, 0xEF,
 0xA2, 0x66, 0x75, 0x63, 0x6B, 0xEF, 0xB1, 0xEF,
 0xA0, 0xFF, 0x18, 0xEF, 0xB2, 0xEF, 0xA2, 0x73,
 0x68, 0x69, 0x74, 0xEF, 0xB1, 0xEF, 0xA0, 0xFF,
 0xFF, 0x00
};

byte            sign_packet_whole_4 [33] = {
       0x01, 0x30, 0x31, 0x13, 0xEF, 0xB0, 0xEF,
 0xA2, 0x66, 0x75, 0x63, 0x6B, 0xEF, 0xB1, 0xEF,
 0xA0, 0xFF, 0x18, 0xEF, 0xB2, 0xEF, 0xA2, 0x73,
 0x68, 0x69, 0x74, 0xEF, 0xB1, 0xEF, 0xA0, 0xFF,
 0xFF, 0x00
};

// cb  ~  minus head and tail 0x00
byte        sign_packet_whole_5 [144] = {
          0xFF , 0xFF , 0x00 , 0x0B , 0x00 , 0x01 , 0x02 , 0x03 , 0x04 , 0x05 , 0x06 , 0x07 , 0x08 , 0x09 , 0x0A  
 , 0x0B , 0x0C , 0x0D , 0x0E , 0x0F , 0x10 , 0x11 , 0x12 , 0x13 , 0x14 , 0x15 , 0x16 , 0x17 , 0x18 , 0x19 , 0x1A  
 , 0x1B , 0x1C , 0x1D , 0x1E , 0x1F , 0x20 , 0x21 , 0x22 , 0x23 , 0x24 , 0x25 , 0x26 , 0x27 , 0x28 , 0x29 , 0x2A 
 , 0x2B , 0x2C , 0x2D , 0x2E , 0x2F , 0x30 , 0x31 , 0x32 , 0x33 , 0x34 , 0x35 , 0x36 , 0x37 , 0x38 , 0x39 , 0x3A  
 , 0x3B , 0x3C , 0x3D , 0x3E , 0x3F , 0x40 , 0x41 , 0x42 , 0x43 , 0x44 , 0x45 , 0x46 , 0x47 , 0x48 , 0x49 , 0x4A  
 , 0x4B , 0x4C , 0x4D , 0x4E , 0x4F , 0x50 , 0x51 , 0x52 , 0x53 , 0x54 , 0x55 , 0x56 , 0x57 , 0x58 , 0x59 , 0x5A 
 , 0x5B , 0x5C , 0x5D , 0x5E , 0x5F , 0x60 , 0x61 , 0x62 , 0x63 , 0x64 , 0x65 , 0x66 , 0x67 , 0x68 , 0x69 , 0x6A 
 , 0x6B , 0x6C , 0x6D , 0x6E , 0x6F , 0x70 , 0x71 , 0x72 , 0x73 , 0x74 , 0x75 , 0x76 , 0x77 , 0x78 , 0x79 , 0x7A  
 , 0x7B , 0x7C , 0x7D , 0x7E , 0x7F , 0xFF , 0x01 , 0x30 , 0x31 , 0xEF , 0xB0 , 0xEF , 0xA2 , 0x63 , 0x66 , 0xFF   
 , 0xFF    
};

// ce   ~  full
byte        sign_packet_whole_6 [146] = {
   0x00 , 0xFF , 0xFF , 0x00 , 0x0B , 0x00 , 0x01 , 0x02 , 0x03 , 0x04 , 0x05 , 0x06 , 0x07 , 0x08 , 0x09 , 0x0A  
 , 0x0B , 0x0C , 0x0D , 0x0E , 0x0F , 0x10 , 0x11 , 0x12 , 0x13 , 0x14 , 0x15 , 0x16 , 0x17 , 0x18 , 0x19 , 0x1A  
 , 0x1B , 0x1C , 0x1D , 0x1E , 0x1F , 0x20 , 0x21 , 0x22 , 0x23 , 0x24 , 0x25 , 0x26 , 0x27 , 0x28 , 0x29 , 0x2A 
 , 0x2B , 0x2C , 0x2D , 0x2E , 0x2F , 0x30 , 0x31 , 0x32 , 0x33 , 0x34 , 0x35 , 0x36 , 0x37 , 0x38 , 0x39 , 0x3A  
 , 0x3B , 0x3C , 0x3D , 0x3E , 0x3F , 0x40 , 0x41 , 0x42 , 0x43 , 0x44 , 0x45 , 0x46 , 0x47 , 0x48 , 0x49 , 0x4A  
 , 0x4B , 0x4C , 0x4D , 0x4E , 0x4F , 0x50 , 0x51 , 0x52 , 0x53 , 0x54 , 0x55 , 0x56 , 0x57 , 0x58 , 0x59 , 0x5A 
 , 0x5B , 0x5C , 0x5D , 0x5E , 0x5F , 0x60 , 0x61 , 0x62 , 0x63 , 0x64 , 0x65 , 0x66 , 0x67 , 0x68 , 0x69 , 0x6A 
 , 0x6B , 0x6C , 0x6D , 0x6E , 0x6F , 0x70 , 0x71 , 0x72 , 0x73 , 0x74 , 0x75 , 0x76 , 0x77 , 0x78 , 0x79 , 0x7A  
 , 0x7B , 0x7C , 0x7D , 0x7E , 0x7F , 0xFF , 0x01 , 0x30 , 0x31 , 0xEF , 0xB0 , 0xEF , 0xA2 , 0x63 , 0x65 , 0xFF   
 , 0xFF , 0x00
};

byte    sign_packet_7[26] = {
  0x00 , 0x00
};

//char *          sign_packet_head = ".ÿÿ.................................. !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÿ.01.";
//char *          sign_packet_body_1   = "ï²ï¢cookieï±ï ÿ";
//char *          sign_packet_body_2   = "ï°ï¢fudgeï±ï ÿ";
//char *          sign_packet_tail     = "ÿ.";  
unsigned long     d = 5000;
SoftwareSerial    s(2,3); // RX, TX
byte              b;
//boolean         temp_bool = true;
boolean           temp_bool2 = true;
long              time_of_last_programming = millis();

/****************************************************************/
void setup()
{
  Serial.begin(9600); 
  //Serial.begin(2400); 
  
  //s.begin(2400);
  //s.begin(110); // no
  //s.begin(300); // no
  // s.begin(600); // no
  // s.begin(1200); // no
  s.begin(2400); // no
  // s.begin(4800); // no
  // s.begin(9600); // no
  // s.begin(14400); // no
  // s.begin(19200); // no
  // s.begin(38400); // no
  // s.begin(57600); // no
  // s.begin(115200); // no
//  s.begin(230400);
//  s.begin(460800);
//  s.begin(921600);
//  s.begin();
//  s.begin();
}

/****************************************************************/
void loop()
{  
//  Serial.write(sign_packet_whole_2, 148);
//  s.write(sign_packet_whole_2, 148);
//  delay(d);
  
//  if (temp_bool)
//  {
//    Serial.write("\n\nmy packet:\n\n");
//    Serial.write(sign_packet_whole_2, 148);
//    temp_bool = false;
//  }
    
  if (millis() - time_of_last_programming > d)
  {
    time_of_last_programming = millis();
//    s.write(sign_packet_whole_3, 34);
//    Serial.write(sign_packet_whole_3, 34);
//    s.write(sign_packet_whole_3, 34);
//    Serial.write(sign_packet_whole_3, 34);
    //s.write      ( sign_packet_whole_5, 144   );
    Serial.write ( sign_packet_whole_6, 146   );
   /s.write(sign_packet_whole_6, 146);
  }
 
//  if(s.available() > 0)
//  { 
////    if (temp_bool2)
////    {
////      Serial.write("\n Received data from sign! \n");
////      temp_bool2 = false;
////    }
//    b = s.read();
//    Serial.write(b);
//  }
//  
//  if (Serial.available() > 0)
//  {
//    b = Serial.read();
//    s.write(b);    
//  }
  
  // send packet 1
  //  Serial.write(sign_packet_head);
  //  Serial.write(sign_packet_body_1);
  //  Serial.write(sign_packet_tail);
  //  delay(d);

  // send packet 2  
  //  Serial.write(sign_packet_head);
  //  Serial.write(sign_packet_body_2);
  //  Serial.write(sign_packet_tail);
  //  delay(d);
}


